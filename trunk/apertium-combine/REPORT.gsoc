Objectives:
 * Alignment:
    1. Unigram (word-to-word) pairwise alignment with minimal crossing edges. 
    2. Use Giza++ for word alignment. 
 * Hypotheses generation:
    1. Basic HG with (restricted) artiﬁcial alignments. 
    2. Chart-walk. 
    3. Parallel scan with insertions. 
 * Ranking:
    1. Comparing counts (very quick/simple/easy) of words 
        from the different translations. (nota: ahahha)
    2. Using IRSTLM and extend the embryo of ranking from Spectie. 

Done:
 * Alignment:
    1. Unigram with maximal longuest subsequence (and then completion)
    2. N-gram as in 1.
    3. N-gram with minimal crossing edges (work in progress / being written).
    4. Would like to use METEOR aligner for stemming / synonymy.
 * Hypotheses generation:
    1. Basic HG for pairwise alignments.
    2. Beam search for N-MT engines.
    3. Work in progress on parallel scan (for N-MT engines).
 * Ranking:
    1. Using IRSTLM (mostly from Spectie). 
    2. Possibility to change the ranker easily (RandLM soon ?)
 * Software design:
    1. Strategy pattern for the matcher, aligner, generator and ranker:
        they can be dynamically changed.
    2. Pairwise alignments -> N-MT engines alignment automatically:
        one just have to write the pairwise matching and aligning methods.

The project uses autotools, has some tests (but not automated: in the future?)
for each parts, DEBUG outputs (graphviz for pairwise alignments).
